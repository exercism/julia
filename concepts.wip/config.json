{
  "exercises" : {
    "concept": [
      {
        "uuid": "39ebdd04-4f84-4817-bf9d-f1f9e066c283",
        "name": "Lasagna",
        "slug": "lasagna",
        "concepts": [
          "functions",
          "integer-introduction",
          "comments"
        ],
        "prerequisites": [],
        "status": "wip"
      },
      {
        "uuid": "84480c18-327e-47ea-94e7-9e14f2146643",
        "name": "Documented Lasagna",
        "slug": "documented-lasagna",
        "concepts": [
          "docstrings"
        ],
        "prerequisites": [
          "functions"
        ],
        "status": "wip"
      },
      {
        "uuid": "d8528c41-5611-4e92-90b2-fd29777d23cf",
        "name": "Welcome to the Tech Palace!",
        "slug": "tech-palace",
        "concepts": [
          "strings"
        ],
        "prerequisites": [
          "functions",
          "docstrings"
        ],
        "status": "wip"
      },
      {
        "uuid": "05cfc609-3a14-479a-b6fa-6d2a53ad111c",
        "name": "Annalyn's Infiltration",
        "slug": "annalyns-infiltration",
        "concepts": [
          "boolean-logic",
          "booleans"
        ],
        "prerequisites": [
          "functions",
          "docstrings"
        ],
        "status": "wip"
      },
      {
        "uuid": "3c0ab989-6544-4a1a-8e93-c2b5dc3d4109",
        "name": "Annalyn's Infiltration â…¡",
        "slug": "annalyns-infiltration2",
        "concepts": [
          "randomness",
          "methods"
        ],
        "prerequisites": [
          "booleans"
        ],
        "status": "wip"
      },
      {
        "uuid": "60e480e9-7f6f-460a-b753-f333a37d3e0c",
        "name": "DND Character",
        "slug": "dnd-char",
        "concepts": [
          "kwdef",
          "using-macros"
        ],
        "prerequisites": [
          "immutable-structs",
          "vectors",
          "randomness",
          "keyword-arguments"
        ],
        "status": "wip"
      },
      {
        "uuid": "f2f696e6-8a6a-4c8c-ae0b-d940d8579905",
        "slug": "leap",
        "name": "Leap",
        "concepts": [
          "arithmetic-operators",
          "integer-equality",
          "boolean-expressions"
        ],
        "prerequisites": [
          "functions",
          "boolean-logic",
          "booleans",
          "docstrings"
        ],
        "status": "wip"
      },
      {
        "uuid": "b615a19c-ab76-4f93-985f-7e4c628b6939",
        "name": "Vexing Vehicle Purchase",
        "slug": "vehicle-purchase",
        "concepts": [
          "conditionals",
          "if-expressions",
          "ternary-operator",
          "short-circuit-evaluation"
        ],
        "prerequisites": [
          "boolean-expressions",
          "strings"
        ],
        "status": "wip"
      },
      {
        "uuid": "4b3e6780-b566-4315-a7b0-45500883f050",
        "name": "Name Badge",
        "slug": "name-badge",
        "concepts": [
          "nothingness"
        ],
        "prerequisites": [
          "strings",
          "string-manipulation",
          "conditionals"
        ],
        "status": "wip"
      },
      {
        "uuid": "234466a0-08ce-45a1-aebc-5ec0b0cde24f",
        "name": "Elyse's Enchantments",
        "slug": "elyses-enchantments",
        "concepts": [
          "vectors",
          "pairs"
        ],
        "prerequisites": [
          "functions",
          "booleans",
          "docstrings"
        ],
        "status": "wip"
      },
      {
        "uuid": "fe7f6097-36b7-42a2-bbd4-f706fb4c08b1",
        "name": "Elyse's Analytic Enchantments",
        "slug": "elyses-analytic-enchantments",
        "concepts": [
          "predicates"
        ],
        "prerequisites": [
          "vectors",
          "nothingness",
          "conditionals"
        ],
        "status": "wip"
      },
      {
        "uuid": "21ba9b66-5410-4748-9e6f-e8a96871d9bf",
        "name": "High Score",
        "slug": "high-score",
        "concepts": [
          "dictionaries",
          "optional-arguments"
        ],
        "prerequisites": [
          "methods",
          "strings",
          "pairs",
          "vectors"
        ],
        "status": "wip"
      },
      {
        "uuid": "36cbda04-3921-4491-9ec6-76951f00aa00",
        "name": "The Exercism Matrix",
        "slug": "exercism-matrix",
        "concepts": [
          "matrices-introduction"
        ],
        "prerequisites": [
          "functions",
          "vectors",
          "docstrings"
        ],
        "status": "wip"
      },
      {
        "uuid": "68001762-8a35-4494-9de4-624ca9efb5cd",
        "name": "Encounters",
        "slug": "encounters",
        "concepts": [
          "multiple-dispatch"
        ],
        "prerequisites": [
          "composite-types",
          "abstract-types",
          "methods"
        ],
        "status": "wip"
      },
      {
        "uuid": "2b2b8bed-ff39-4e77-a2fe-254125b53a1c",
        "name": "ðŸ•‘ðŸ•¤ðŸ•—",
        "slug": "emoji-times",
        "concepts": [
          "unicode-identifiers",
          "emoji-symbols"
        ],
        "prerequisites": [
          "symbols",
          "composite-types",
          "methods",
          "constants"
        ],
        "status": "wip"
      },
      {
        "uuid": "0e7ecc5e-b4d6-4ead-bfaa-a2ebdddcff47",
        "name": "Stage Heralding",
        "slug": "stage-heralding",
        "concepts": [
          "regex",
          "string-literals-using"
        ],
        "prerequisites": [
          "strings",
          "conditionals",
          "nothingness"
        ],
        "status": "wip"
      },
      {
        "uuid": "9a864ac5-0fda-4ba2-bccc-702a1444c412",
        "name": "Fibonacci Iterator",
        "slug": "fibonacci-iterator",
        "concepts": [
          "iterator-protocol"
        ],
        "prerequisites": [
          "multiple-dispatch",
          "numbers",
          "loops",
          "nothingness",
          "parametric-types",
          "tuples",
          "optional-arguments"
        ],
        "status": "wip"
      }
    ]
  },
  "concepts": [
    {
      "uuid": "7d7cef41-5cef-4896-9aa3-cd7baf15339c",
      "slug": "abstract-types",
      "name": "Abstract Types"
    },
    {
      "uuid": "839e5029-3bde-4823-8177-7b04a43cbf62",
      "slug": "boolean-logic",
      "name": "Boolean Logic"
    },
    {
      "uuid": "9470279c-9960-420b-b266-53e329bb205c",
      "slug": "booleans",
      "name": "Booleans"
    },
    {
      "slug": "comments",
      "name": "Comments",
      "uuid": "90365822-f58c-4e45-88be-430978b77e65"
    },
    {
      "uuid": "aad9773b-9032-4d8d-a9e9-4b8152f35b68",
      "slug": "composite-types",
      "name": "Composite Types"
    },
    {
      "uuid": "0d312606-7738-4b0a-9c33-564c40c6f35d",
      "slug": "conditionals",
      "name": "Conditionals"
    },
    {
      "uuid": "3584666e-faaa-4a30-b5af-b80c4ee980c7",
      "slug": "constants",
      "name": "Constants"
    },
    {
      "uuid": "33e5c4af-7361-4a61-bdb2-504f7227d0ef",
      "slug": "docstrings",
      "name": "Docstrings"
    },
    {
      "uuid": "daef8574-4fed-4385-919b-82a16e3b9701",
      "slug": "emoji-symbols",
      "name": "Emoji Symbols"
    },
    {
      "uuid": "32384ed4-ef26-4118-8ea3-4d44c331e828",
      "slug": "functions",
      "name": "Functions"
    },
    {
      "uuid": "684a989c-530f-43df-9a1d-d76708528312",
      "slug": "if-expressions",
      "name": "If Expressions"
    },
    {
      "slug": "integer-introduction",
      "name": "Integers and Arithmetic Operations",
      "uuid": "006ebce8-87cd-4695-87e6-8a7b8dc2f239"
    },
    {
      "uuid": "cdf8b342-f8b6-4b34-8c6c-05c968c685bf",
      "slug": "kwdef",
      "name": "Keyword-based Constructors"
    },
    {
      "uuid": "0ac24090-fa7b-4b36-a78c-4c2fe3686223",
      "slug": "matrices-concatenation",
      "name": "Matrices Concatenation"
    },
    {
      "uuid": "63b504c0-a6b4-410b-8ebd-9e6745ad99f0",
      "slug": "matrices-indices",
      "name": "Matrices Indices"
    },
    {
      "uuid": "6d1448b6-847a-4c18-9a9b-3ad37a66d31e",
      "slug": "matrices-introduction",
      "name": "Matrices Introduction"
    },
    {
      "uuid": "de3002c3-9234-4516-923f-2ffb33024ea5",
      "slug": "matrices-iteration",
      "name": "Matrices Iteration"
    },
    {
      "uuid": "1ba6abf2-646a-444d-a820-e94560e6f685",
      "slug": "matrices-mutation",
      "name": "Matrices Mutation"
    },
    {
      "uuid": "8ca3e0f2-30ef-4a27-b30e-c196fcc6104f",
      "slug": "methods",
      "name": "Methods"
    },
    {
      "uuid": "84567594-5ec1-48f4-bfaf-f6480a75c47e",
      "slug": "multiple-dispatch",
      "name": "Multiple Dispatch"
    },
    {
      "uuid": "3fd60b22-06c6-444e-baf2-8cfa48dc6a3f",
      "slug": "optional-arguments",
      "name": "Optional Arguments"
    },
    {
      "uuid": "0e292741-5920-4d94-a038-ba6d1be8871d",
      "slug": "randomness",
      "name": "Randomness"
    },
    {
      "uuid": "25d93b83-fbca-452a-bac2-e5b0d3b656eb",
      "slug": "short-circuit-evaluation",
      "name": "Short-Circuit Evaluation"
    },
    {
      "uuid": "ac862fcd-90a1-404c-8f6d-ba42f2c813a4",
      "slug": "symbols",
      "name": "Symbols"
    },
    {
      "uuid": "6587e5b6-f87f-4a57-81bb-080d030409ff",
      "slug": "ternary-operator",
      "name": "Ternary Operator"
    },
    {
      "uuid": "7ebfefea-f725-4b3e-9f2d-b5820b73dd9a",
      "slug": "unicode-identifiers",
      "name": "Unicode Identifiers"
    }
  ],
  "key_features": [
    {
      "title": "Fast",
      "content": "Julia is designed for high performance and compiles efficient native code for multiple platforms",
      "icon": "fast"
    },
    {
      "title": "Interactive",
      "content": "Julia is dynamically typed, feels like a scripting language and has good support for interactive use",
      "icon": "interactive"
    },
    {
      "title": "Scientific",
      "content": "Julia is designed with reproducibility, distributed computing and frictionless collaboration in mind",
      "icon": "scientific"
    },
    {
      "title": "Composable",
      "content": "Julia uses multiple dispatch as a paradigm, making it unreasonably effective for composing programs",
      "icon": "fun"
    },
    {
      "title": "Expressive",
      "content": "Multiple dispatch, generator expressions and metaprogramming features lead to highly expressive code",
      "icon": "expressive"
    },
    {
      "title": "Natural Syntax",
      "content": "Use operator overloading plus unicode operators and identifiers to write code that looks like math",
      "icon": "multi-paradigm"
    }
  ]
}
