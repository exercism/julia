using Test

include("intergalactic-transmission.jl")

@testset verbose = true "tests" begin
    @testset "Calculate transmit sequence" begin
        @testset "empty message" begin
            @test get_transmit_sequence([]) ==  []
        end

        @testset "0x00 is transmitted as 0x0000" begin
            @test get_transmit_sequence([0x00]) ==  [0x00, 0x00]
        end

        @testset "0x02 is transmitted as 0x0300" begin
            @test get_transmit_sequence([0x02]) ==  [0x03, 0x00]
        end

        @testset "0x06 is transmitted as 0x0600" begin
            @test get_transmit_sequence([0x06]) ==  [0x06, 0x00]
        end

        @testset "0x05 is transmitted as 0x0581" begin
            @test get_transmit_sequence([0x05]) ==  [0x05, 0x81]
        end

        @testset "0x29 is transmitted as 0x2881" begin
            @test get_transmit_sequence([0x29]) ==  [0x28, 0x81]
        end

        @testset "0xc001c0de is transmitted as 0xc000711be1" begin
            @test get_transmit_sequence([0xc0, 0x01, 0xc0, 0xde]) == 
                [0xc0, 0x00, 0x71, 0x1b, 0xe1]
        end

        @testset "six byte message" begin
            @test get_transmit_sequence([0x47, 0x72, 0x65, 0x61, 0x74, 0x21]) == 
                [0x47, 0xb8, 0x99, 0xac, 0x17, 0xa0, 0x84]
        end

        @testset "seven byte message" begin
            @test get_transmit_sequence([0x47, 0x72, 0x65, 0x61, 0x74, 0x31, 0x21]) == 
                [0x47, 0xb8, 0x99, 0xac, 0x17, 0xa0, 0xc5, 0x42]
        end

        @testset "eight byte message" begin
            @test get_transmit_sequence([0xc0, 0x01, 0x13, 0x37, 0xc0, 0xde, 0x21, 0x21]) == 
                [0xc0, 0x00, 0x44, 0x66, 0x7d, 0x06, 0x78, 0x42, 0x21, 0x81]
        end

        @testset "twenty byte message" begin
            input = [0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x6d, 0x20, 0x69, 0x73, 0x20, 0x61, 
                0x77, 0x65, 0x73, 0x6f, 0x6d, 0x65, 0x21]
            expected = [0x44, 0xbd, 0x18, 0xaf, 0x27, 0x1b, 0xa5, 0xe7, 0x6c, 0x90, 0x1b, 0x2e, 0x33, 
                0x03, 0x84, 0xee, 0x65, 0xb8, 0xdb, 0xed, 0xd7, 0x28, 0x84]
            @test get_transmit_sequence(input) == expected            
        end
    end

    @testset "Decode received messages" begin
        @testset "empty message" begin
            @test decode_sequence([]) == []
        end

        @testset "zero message" begin
            @test decode_sequence([0x00, 0x00]) == [0x00]
        end

        @testset "0x0300 is decoded to 0x02" begin
            @test decode_sequence([0x03, 0x00]) == [0x02]
        end

        @testset "0x0581 is decoded to 0x05" begin
            @test decode_sequence([0x05, 0x81]) == [0x05]
        end

        @testset "0x2881 is decoded to 0x29" begin
            @test decode_sequence([0x28, 0x81]) == [0x29]
        end

        @testset "first byte has wrong parity" begin
            @test_throws ErrorException decode_sequence([0x07, 0x00])
        end


        @testset "second byte has wrong parity" begin
            @test_throws ErrorException decode_sequence([0x03, 0x68])
        end

        @testset "0xcf4b00 is decoded to 0xce94" begin
            @test decode_sequence([0xcf, 0x4b, 0x00]) == [0xce, 0x94]
        end

        @testset "0xe2566500 is decoded to 0xe2ad90" begin
            @test decode_sequence([0xe2, 0x56, 0x65, 0x00]) == [0xe2, 0xad, 0x90]
        end

        @testset "six byte message" begin
            @test decode_sequence([0x47, 0xb8, 0x99, 0xac, 0x17, 0xa0, 0x84]) == 
                [0x47, 0x72, 0x65, 0x61, 0x74, 0x21]
        end

        @testset "seven byte message" begin
            @test decode_sequence([0x47, 0xb8, 0x99, 0xac, 0x17, 0xa0, 0xc5, 0x42]) == 
                [0x47, 0x72, 0x65, 0x61, 0x74, 0x31, 0x21]
        end

        @testset "last byte has wrong parity" begin
            @test_throws ErrorException decode_sequence([0x47, 0xb8, 0x99, 0xac, 0x17, 0xa0, 0xc5, 0x43])
        end

        @testset "eight byte message" begin
            @test decode_sequence([0xc0, 0x00, 0x44, 0x66, 0x7d, 0x06, 0x78, 0x42, 0x21, 0x81]) == 
                [0xc0, 0x01, 0x13, 0x37, 0xc0, 0xde, 0x21, 0x21]
        end

        @testset "twenty byte message" begin
            input = [0x44, 0xbd, 0x18, 0xaf, 0x27, 0x1b, 0xa5, 0xe7, 0x6c, 0x90, 0x1b, 0x2e, 
                        0x33, 0x03, 0x84, 0xee, 0x65, 0xb8, 0xdb, 0xed, 0xd7, 0x28, 0x84]
            expected = [0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x6d, 0x20, 0x69, 0x73, 
                        0x20, 0x61, 0x77, 0x65, 0x73, 0x6f, 0x6d, 0x65, 0x21]
            @test decode_sequence(input) == expected
                
        end

        @testset "wrong parity on 16th byte" begin
            @test_throws ErrorException decode_sequence([0x44, 0xbd, 0x18, 0xaf, 0x27, 0x1b, 0xa5, 0xe7, 
                0x6c, 0x90, 0x1b, 0x2e, 0x33, 0x03, 0x84, 0xef, 0x65, 0xb8, 0xdb, 0xed, 0xd7, 0x28, 0x84])
        end

    end

end
