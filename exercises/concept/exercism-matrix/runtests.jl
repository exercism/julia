using Test

include("exercism-matrix.jl")

@testset verbose = true "tests" begin
    @testset "construct E" begin
        @test E == [
            0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0;
            0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0;
            0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0;
            0 1 0 0 1 0 1 0 0 0 0 1 0 1 0 0 1 0;
            0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0;
            1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1;
            0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0;
            0 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0;
            0 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0;
            0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0;
            0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0;
        ]

        @test isconst(@__MODULE__, :E)
    end

    @testset "sadexercism" begin
        @test frown(E) == [
            0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0;
            0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0;
            0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0;
            0 1 0 0 1 0 1 0 0 0 0 1 0 1 0 0 1 0;
            0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0;
            1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1;
            0 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0;
            0 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0;
            0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0;
            0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0;
            0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0;
        ]

        Ẽ = copy(E)
        frown!(Ẽ)
        @test Ẽ == [
            0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0;
            0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0;
            0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0;
            0 1 0 0 1 0 1 0 0 0 0 1 0 1 0 0 1 0;
            0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0;
            1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1;
            0 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0;
            0 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0;
            0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0;
            0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0;
            0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0;
        ]

        @test Ẽ != E
    end

    @testset "stickerwall" begin
        @test stickerwall(E) == [
            0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0;
            0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0;
            0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0;
            0 1 0 0 1 0 1 0 0 0 0 1 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 1 0 0 0 0 1 0 1 0 0 1 0;
            0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0;
            1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1;
            0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0;
            0 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0;
            0 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0;
            0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0;
            0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0;
            0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
            1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1;
            0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
            0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0;
            0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0;
            0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0;
            0 1 0 0 1 0 1 0 0 0 0 1 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 1 0 0 0 0 1 0 1 0 0 1 0;
            0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0;
            1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1;
            0 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0;
            0 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0;
            0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0;
            0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0;
            0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0;
        ]
    end

    @testset "dots to column pixel counts" begin
        @test colpixelcount(E) == [
            0 0 2 2 0 0 0 0 0 0 0 0 0 0 2 2 0 0;
            0 8 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 0;
            0 8 0 0 0 1 0 0 0 0 0 0 1 0 0 0 8 0;
            0 8 0 0 1 0 2 0 0 0 0 2 0 1 0 0 8 0;
            0 8 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 0;
            1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1;
            0 8 0 0 0 0 2 0 0 0 0 2 0 0 0 0 8 0;
            0 8 0 0 0 0 0 1 0 0 1 0 0 0 0 0 8 0;
            0 8 0 0 0 0 0 0 1 1 0 0 0 0 0 0 8 0;
            0 8 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 0;
            0 0 2 2 0 0 0 0 0 0 0 0 0 0 2 2 0 0;
        ]

        dotmatrix = [
            1 0 0;
            1 1 0;
            1 1 1;
        ]
        @test colpixelcount(dotmatrix) == [
            3 0 0;
            3 2 0;
            3 2 1;
        ]

        @test colpixelcount(stickerwall(E)) == [
            0 0 5 5 0 0 0 0 0 0 0 0 0 0 5 5 0 0 0 25 0 0 0 5 5 0 0 0 0 0 0 0 0 0 0 5 5 0 0; 
            0 17 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 0 0 25 0 0 17 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 0; 
            0 17 0 0 0 3 0 0 0 0 0 0 3 0 0 0 17 0 0 25 0 0 17 0 0 0 3 0 0 0 0 0 0 3 0 0 0 17 0; 
            0 17 0 0 3 0 5 0 0 0 0 5 0 3 0 0 17 0 0 25 0 0 17 0 0 3 0 5 0 0 0 0 5 0 3 0 0 17 0; 
            0 17 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 0 0 25 0 0 17 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 0; 
            3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 25 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3; 
            0 17 0 0 0 0 5 0 0 0 0 5 0 0 0 0 17 0 0 25 0 0 17 0 0 0 0 0 0 3 3 0 0 0 0 0 0 17 0; 
            0 17 0 0 0 0 0 3 0 0 3 0 0 0 0 0 17 0 0 25 0 0 17 0 0 0 0 0 3 0 0 3 0 0 0 0 0 17 0; 
            0 17 0 0 0 0 0 0 3 3 0 0 0 0 0 0 17 0 0 25 0 0 17 0 0 0 0 5 0 0 0 0 5 0 0 0 0 17 0; 
            0 17 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 0 0 25 0 0 17 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 0; 
            0 0 5 5 0 0 0 0 0 0 0 0 0 0 5 5 0 0 0 25 0 0 0 5 5 0 0 0 0 0 0 0 0 0 0 5 5 0 0; 
            0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 25 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 
            3 17 5 5 3 3 5 3 3 3 3 5 3 3 5 5 17 3 1 25 1 3 17 5 5 3 3 5 3 3 3 3 5 3 3 5 5 17 3; 
            0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 25 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 
            0 0 5 5 0 0 0 0 0 0 0 0 0 0 5 5 0 0 0 25 0 0 0 5 5 0 0 0 0 0 0 0 0 0 0 5 5 0 0; 
            0 17 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 0 0 25 0 0 17 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 0; 
            0 17 0 0 0 3 0 0 0 0 0 0 3 0 0 0 17 0 0 25 0 0 17 0 0 0 3 0 0 0 0 0 0 3 0 0 0 17 0; 
            0 17 0 0 3 0 5 0 0 0 0 5 0 3 0 0 17 0 0 25 0 0 17 0 0 3 0 5 0 0 0 0 5 0 3 0 0 17 0; 
            0 17 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 0 0 25 0 0 17 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 0; 
            3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 25 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3; 
            0 17 0 0 0 0 0 0 3 3 0 0 0 0 0 0 17 0 0 25 0 0 17 0 0 0 0 5 0 0 0 0 5 0 0 0 0 17 0; 
            0 17 0 0 0 0 0 3 0 0 3 0 0 0 0 0 17 0 0 25 0 0 17 0 0 0 0 0 3 0 0 3 0 0 0 0 0 17 0; 
            0 17 0 0 0 0 5 0 0 0 0 5 0 0 0 0 17 0 0 25 0 0 17 0 0 0 0 0 0 3 3 0 0 0 0 0 0 17 0; 
            0 17 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 0 0 25 0 0 17 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 0; 
            0 0 5 5 0 0 0 0 0 0 0 0 0 0 5 5 0 0 0 25 0 0 0 5 5 0 0 0 0 0 0 0 0 0 0 5 5 0 0
        ]
    end

    @testset "render" begin
        @test render(E) == "  XX          XX  \n X              X \n X   X      X   X \n X  X X    X X  X \n X              X \nX                X\n X    X    X    X \n X     X  X     X \n X      XX      X \n X              X \n  XX          XX  "
 
        @test render(colpixelcount(E)) == render(E)
        
        dotmatrix = [
            1 0 0;
            1 1 0;
            1 1 1;
        ]
        @test render(dotmatrix) == "X  \nXX \nXXX"
    end
end
