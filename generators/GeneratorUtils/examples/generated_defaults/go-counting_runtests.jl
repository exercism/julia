# canonical data version: 1.0.0
# This file was generated by a script.

using Test

include("go-counting.jl")

# The following lines are top-level comments in canonical-data.json; comments within cases
# are not included. Do not include these comments in the exercise's runtests.jl.
#
# Territory consists of [x, y] coordinate pairs.

@testset "Black corner territory on 5x5 board" begin
    @test territory(["  B  ", " B B ", "B W B", " W W ", "  W  "], 0, 1) == Dict("owner" => "BLACK", "territory" => [[0, 0], [0, 1], [1, 0]])
end

@testset "White center territory on 5x5 board" begin
    @test territory(["  B  ", " B B ", "B W B", " W W ", "  W  "], 2, 3) == Dict("owner" => "WHITE", "territory" => [[2, 3]])
end

@testset "Open corner territory on 5x5 board" begin
    @test territory(["  B  ", " B B ", "B W B", " W W ", "  W  "], 1, 4) == Dict("owner" => "NONE", "territory" => [[0, 3], [0, 4], [1, 4]])
end

@testset "A stone and not a territory on 5x5 board" begin
    @test territory(["  B  ", " B B ", "B W B", " W W ", "  W  "], 1, 1) == Dict("owner" => "NONE", "territory" => Any[])
end

@testset "Invalid because X is too low for 5x5 board" begin
    @test_throws ArgumentError territory(["  B  ", " B B ", "B W B", " W W ", "  W  "], -1, 1)
end

@testset "Invalid because X is too high for 5x5 board" begin
    @test_throws ArgumentError territory(["  B  ", " B B ", "B W B", " W W ", "  W  "], 5, 1)
end

@testset "Invalid because Y is too low for 5x5 board" begin
    @test_throws ArgumentError territory(["  B  ", " B B ", "B W B", " W W ", "  W  "], 1, -1)
end

@testset "Invalid because Y is too high for 5x5 board" begin
    @test_throws ArgumentError territory(["  B  ", " B B ", "B W B", " W W ", "  W  "], 1, 5)
end

@testset "One territory is the whole board" begin
    @test territories([" "]) == Dict("territoryBlack" => Any[], "territoryWhite" => Any[], "territoryNone" => [[0, 0]])
end

@testset "Two territory rectangular board" begin
    @test territories([" BW ", " BW "]) == Dict("territoryBlack" => [[0, 0], [0, 1]], "territoryWhite" => [[3, 0], [3, 1]], "territoryNone" => Any[])
end

@testset "Two region rectangular board" begin
    @test territories([" B "]) == Dict("territoryBlack" => [[0, 0], [2, 0]], "territoryWhite" => Any[], "territoryNone" => Any[])
end

