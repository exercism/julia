# canonical data version: 1.5.0
# This file was generated by a script.

using Test

include("saddle-points.jl")

# The following lines are top-level comments in canonical-data.json; comments within cases
# are not included. Do not include these comments in the exercise's runtests.jl.
#
# Matrix rows and columns are 1-indexed.

@testset "Can identify single saddle point" begin
    @test saddle_points([[9, 8, 7], [5, 3, 2], [6, 6, 7]]) == [Dict("row" => 2, "column" => 1)]
end

@testset "Can identify that empty matrix has no saddle points" begin
    @test saddle_points(Array{Any,1}[[]]) == []
end

@testset "Can identify lack of saddle points when there are none" begin
    @test saddle_points([[1, 2, 3], [3, 1, 2], [2, 3, 1]]) == []
end

@testset "Can identify multiple saddle points in a column" begin
    @test saddle_points([[4, 5, 4], [3, 5, 5], [1, 5, 4]]) == [Dict("row" => 1, "column" => 2), Dict("row" => 2, "column" => 2), Dict("row" => 3, "column" => 2)]
end

@testset "Can identify multiple saddle points in a row" begin
    @test saddle_points([[6, 7, 8], [5, 5, 5], [7, 5, 6]]) == [Dict("row" => 2, "column" => 1), Dict("row" => 2, "column" => 2), Dict("row" => 2, "column" => 3)]
end

@testset "Can identify saddle point in bottom right corner" begin
    @test saddle_points([[8, 7, 9], [6, 7, 6], [3, 2, 5]]) == [Dict("row" => 3, "column" => 3)]
end

@testset "Can identify saddle points in a non square matrix" begin
    @test saddle_points([[3, 1, 3], [3, 2, 4]]) == [Dict("row" => 1, "column" => 3), Dict("row" => 1, "column" => 1)]
end

@testset "Can identify that saddle points in a single column matrix are those with the minimum value" begin
    @test saddle_points([[2], [1], [4], [1]]) == [Dict("row" => 2, "column" => 1), Dict("row" => 4, "column" => 1)]
end

@testset "Can identify that saddle points in a single row matrix are those with the maximum value" begin
    @test saddle_points([[2, 5, 3, 5]]) == [Dict("row" => 1, "column" => 2), Dict("row" => 1, "column" => 4)]
end

