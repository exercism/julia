# canonical data version: 1.3.0
# This file was generated by a script.

using Test

include("complex-numbers.jl")

# The following lines are top-level comments in canonical-data.json; comments within cases
# are not included. Do not include these comments in the exercise's runtests.jl.
#
#  The canonical data assumes mathematically correct real   
#  numbers. The testsuites should consider rounding errors  
#  instead of testing for exact values for any non-integer  
#  tests.                                                   
#  Complex numbers z are represented as arrays [x, y] so    
#  that z = x + i * y.                                      
#  Pi is represented as a string "pi", euler's number is  
#  represented as "e".                                    

@testset "Real part" begin
    @testset "Real part of a purely real number" begin
        @test real([1, 0]) == 1
    end
    @testset "Real part of a purely imaginary number" begin
        @test real([0, 1]) == 0
    end
    @testset "Real part of a number with real and imaginary part" begin
        @test real([1, 2]) == 1
    end
end

@testset "Imaginary part" begin
    @testset "Imaginary part of a purely real number" begin
        @test imaginary([1, 0]) == 0
    end
    @testset "Imaginary part of a purely imaginary number" begin
        @test imaginary([0, 1]) == 1
    end
    @testset "Imaginary part of a number with real and imaginary part" begin
        @test imaginary([1, 2]) == 2
    end
end

@testset "Imaginary unit" begin
    @test mul([0, 1], [0, 1]) == [-1, 0]
end

@testset "Arithmetic" begin
    @testset "Addition" begin
        @testset "Add purely real numbers" begin
            @test add([1, 0], [2, 0]) == [3, 0]
        end
        @testset "Add purely imaginary numbers" begin
            @test add([0, 1], [0, 2]) == [0, 3]
        end
        @testset "Add numbers with real and imaginary part" begin
            @test add([1, 2], [3, 4]) == [4, 6]
        end
    end
    @testset "Subtraction" begin
        @testset "Subtract purely real numbers" begin
            @test sub([1, 0], [2, 0]) == [-1, 0]
        end
        @testset "Subtract purely imaginary numbers" begin
            @test sub([0, 1], [0, 2]) == [0, -1]
        end
        @testset "Subtract numbers with real and imaginary part" begin
            @test sub([1, 2], [3, 4]) == [-2, -2]
        end
    end
    @testset "Multiplication" begin
        @testset "Multiply purely real numbers" begin
            @test mul([1, 0], [2, 0]) == [2, 0]
        end
        @testset "Multiply purely imaginary numbers" begin
            @test mul([0, 1], [0, 2]) == [-2, 0]
        end
        @testset "Multiply numbers with real and imaginary part" begin
            @test mul([1, 2], [3, 4]) == [-5, 10]
        end
    end
    @testset "Division" begin
        @testset "Divide purely real numbers" begin
            @test div([1, 0], [2, 0]) == Real[0.5, 0]
        end
        @testset "Divide purely imaginary numbers" begin
            @test div([0, 1], [0, 2]) == Real[0.5, 0]
        end
        @testset "Divide numbers with real and imaginary part" begin
            @test div([1, 2], [3, 4]) == [0.44, 0.08]
        end
    end
end

@testset "Absolute value" begin
    @testset "Absolute value of a positive purely real number" begin
        @test abs([5, 0]) == 5
    end
    @testset "Absolute value of a negative purely real number" begin
        @test abs([-5, 0]) == 5
    end
    @testset "Absolute value of a purely imaginary number with positive imaginary part" begin
        @test abs([0, 5]) == 5
    end
    @testset "Absolute value of a purely imaginary number with negative imaginary part" begin
        @test abs([0, -5]) == 5
    end
    @testset "Absolute value of a number with real and imaginary part" begin
        @test abs([3, 4]) == 5
    end
end

@testset "Complex conjugate" begin
    @testset "Conjugate a purely real number" begin
        @test conjugate([5, 0]) == [5, 0]
    end
    @testset "Conjugate a purely imaginary number" begin
        @test conjugate([0, 5]) == [0, -5]
    end
    @testset "Conjugate a number with real and imaginary part" begin
        @test conjugate([1, 1]) == [1, -1]
    end
end

@testset "Complex exponential function" begin
    @testset "Euler's identity/formula" begin
        @test exp(Any[0, "pi"]) == [-1, 0]
    end
    @testset "Exponential of 0" begin
        @test exp([0, 0]) == [1, 0]
    end
    @testset "Exponential of a purely real number" begin
        @test exp([1, 0]) == Any["e", 0]
    end
    @testset "Exponential of a number with real and imaginary part" begin
        @test exp(["ln(2)", "pi"]) == [-2, 0]
    end
end

