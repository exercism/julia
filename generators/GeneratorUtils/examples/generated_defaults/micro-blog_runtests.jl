# canonical data version: 1.0.0
# This file was generated by a script.

using Test

include("micro-blog.jl")

# The following lines are top-level comments in canonical-data.json; comments within cases
# are not included. Do not include these comments in the exercise's runtests.jl.
#
# This exercise is only applicable to languages that use UTF-8, UTF-16
# or other variable width Unicode compatible encoding as their internal
# string representation.
# 
# This exercise is probably too easy in languages that use Unicode aware
# string slicing.
# 
# When adding additional tests to the problem specification, consider that
# in progress solutions might not fail due to UTF-8 and UTF-16
# differences.
# 
# Avoid adding tests that involve characters (graphemes) that are made up
# of multiple characters, or introduce them as a more advanced step.
# 
# Consider adding a track specific hint.md about if your language uses
# UTF-8, UTF-16 or other for its internal string representation.

@testset "Truncate a micro blog post" begin
    @testset "English language short" begin
        @test truncate("Hi") == "Hi"
    end
    @testset "English language long" begin
        @test truncate("Hello there") == "Hello"
    end
    @testset "German language short (broth)" begin
        @test truncate("brühe") == "brühe"
    end
    @testset "German language long (bear carpet → beards)" begin
        @test truncate("Bärteppich") == "Bärte"
    end
    @testset "Bulgarian language short (good)" begin
        @test truncate("Добър") == "Добър"
    end
    @testset "Greek language short (health)" begin
        @test truncate("υγειά") == "υγειά"
    end
    @testset "Maths short" begin
        @test truncate("a=πr²") == "a=πr²"
    end
    @testset "Maths long" begin
        @test truncate("∅⊊ℕ⊊ℤ⊊ℚ⊊ℝ⊊ℂ") == "∅⊊ℕ⊊ℤ"
    end
    @testset "English and emoji short" begin
        @test truncate("Fly 🛫") == "Fly 🛫"
    end
    @testset "Emoji short" begin
        @test truncate("💇") == "💇"
    end
    @testset "Emoji long" begin
        @test truncate("❄🌡🤧🤒🏥🕰😀") == "❄🌡🤧🤒🏥"
    end
    @testset "Royal Flush?" begin
        @test truncate("🃎🂸🃅🃋🃍🃁🃊") == "🃎🂸🃅🃋🃍"
    end
end

