# canonical data version: 1.4.0
# This file was generated by a script.

using Test

include("markdown.jl")

# The following lines are top-level comments in canonical-data.json; comments within cases
# are not included. Do not include these comments in the exercise's runtests.jl.
#
# Markdown is a shorthand for creating HTML from text strings.

@testset "parses normal text as a paragraph" begin
    @test parse("This will be a paragraph") == "<p>This will be a paragraph</p>"
end

@testset "parsing italics" begin
    @test parse("_This will be italic_") == "<p><em>This will be italic</em></p>"
end

@testset "parsing bold text" begin
    @test parse("__This will be bold__") == "<p><strong>This will be bold</strong></p>"
end

@testset "mixed normal, italics and bold text" begin
    @test parse("This will _be_ __mixed__") == "<p>This will <em>be</em> <strong>mixed</strong></p>"
end

@testset "with h1 header level" begin
    @test parse("# This will be an h1") == "<h1>This will be an h1</h1>"
end

@testset "with h2 header level" begin
    @test parse("## This will be an h2") == "<h2>This will be an h2</h2>"
end

@testset "with h6 header level" begin
    @test parse("###### This will be an h6") == "<h6>This will be an h6</h6>"
end

@testset "unordered lists" begin
    @test parse("* Item 1\n* Item 2") == "<ul><li>Item 1</li><li>Item 2</li></ul>"
end

@testset "With a little bit of everything" begin
    @test parse("# Header!\n* __Bold Item__\n* _Italic Item_") == "<h1>Header!</h1><ul><li><strong>Bold Item</strong></li><li><em>Italic Item</em></li></ul>"
end

@testset "with markdown symbols in the header text that should not be interpreted" begin
    @test parse("# This is a header with # and * in the text") == "<h1>This is a header with # and * in the text</h1>"
end

@testset "with markdown symbols in the list item text that should not be interpreted" begin
    @test parse("* Item 1 with a # in the text\n* Item 2 with * in the text") == "<ul><li>Item 1 with a # in the text</li><li>Item 2 with * in the text</li></ul>"
end

@testset "with markdown symbols in the paragraph text that should not be interpreted" begin
    @test parse("This is a paragraph with # and * in the text") == "<p>This is a paragraph with # and * in the text</p>"
end

@testset "unordered lists close properly with preceding and following lines" begin
    @test parse("# Start a list\n* Item 1\n* Item 2\nEnd a list") == "<h1>Start a list</h1><ul><li>Item 1</li><li>Item 2</li></ul><p>End a list</p>"
end

