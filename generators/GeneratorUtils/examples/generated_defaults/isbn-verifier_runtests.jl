# canonical data version: 2.7.0
# This file was generated by a script.

using Test

include("isbn-verifier.jl")

# The following lines are top-level comments in canonical-data.json; comments within cases
# are not included. Do not include these comments in the exercise's runtests.jl.
#
# An expected value of true indicates a valid ISBN-10, 
# whereas false means the ISBN-10 is invalid.

@testset "valid isbn number" begin
    @test is_valid("3-598-21508-8") == true
end

@testset "invalid isbn check digit" begin
    @test is_valid("3-598-21508-9") == false
end

@testset "valid isbn number with a check digit of 10" begin
    @test is_valid("3-598-21507-X") == true
end

@testset "check digit is a character other than X" begin
    @test is_valid("3-598-21507-A") == false
end

@testset "invalid character in isbn" begin
    @test is_valid("3-598-P1581-X") == false
end

@testset "X is only valid as a check digit" begin
    @test is_valid("3-598-2X507-9") == false
end

@testset "valid isbn without separating dashes" begin
    @test is_valid("3598215088") == true
end

@testset "isbn without separating dashes and X as check digit" begin
    @test is_valid("359821507X") == true
end

@testset "isbn without check digit and dashes" begin
    @test is_valid("359821507") == false
end

@testset "too long isbn and no dashes" begin
    @test is_valid("3598215078X") == false
end

@testset "too short isbn" begin
    @test is_valid("00") == false
end

@testset "isbn without check digit" begin
    @test is_valid("3-598-21507") == false
end

@testset "check digit of X should not be used for 0" begin
    @test is_valid("3-598-21515-X") == false
end

@testset "empty isbn" begin
    @test is_valid("") == false
end

@testset "input is 9 characters" begin
    @test is_valid("134456729") == false
end

@testset "invalid characters are not ignored" begin
    @test is_valid("3132P34035") == false
end

@testset "input is too long but contains a valid isbn" begin
    @test is_valid("98245726788") == false
end

