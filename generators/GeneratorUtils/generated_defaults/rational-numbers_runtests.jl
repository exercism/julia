# canonical data version: 1.1.0
# This file was generated by a script.

using Test

include("rational-numbers.jl")

# The following lines are top-level comments in canonical-data.json; comments within cases
# are not included. Do not include these comments in the exercise's runtests.jl.
#
#  The canonical data assumes mathematically correct real   
#  numbers. The testsuites should consider rounding errors  
#  instead of testing for exact values for any non-integer  
#  tests.                                                   
#  Rational numbers r are represented as arrays [a, b] so   
#  that r = a/b.                                            

@testset "Arithmetic" begin
    @testset "Addition" begin
        @testset "Add two positive rational numbers" begin
            @test add([1, 2], [2, 3]) == [7, 6]
        end
        @testset "Add a positive rational number and a negative rational number" begin
            @test add([1, 2], [-2, 3]) == [-1, 6]
        end
        @testset "Add two negative rational numbers" begin
            @test add([-1, 2], [-2, 3]) == [-7, 6]
        end
        @testset "Add a rational number to its additive inverse" begin
            @test add([1, 2], [-1, 2]) == [0, 1]
        end
    end
    @testset "Subtraction" begin
        @testset "Subtract two positive rational numbers" begin
            @test sub([1, 2], [2, 3]) == [-1, 6]
        end
        @testset "Subtract a positive rational number and a negative rational number" begin
            @test sub([1, 2], [-2, 3]) == [7, 6]
        end
        @testset "Subtract two negative rational numbers" begin
            @test sub([-1, 2], [-2, 3]) == [1, 6]
        end
        @testset "Subtract a rational number from itself" begin
            @test sub([1, 2], [1, 2]) == [0, 1]
        end
    end
    @testset "Multiplication" begin
        @testset "Multiply two positive rational numbers" begin
            @test mul([1, 2], [2, 3]) == [1, 3]
        end
        @testset "Multiply a negative rational number by a positive rational number" begin
            @test mul([-1, 2], [2, 3]) == [-1, 3]
        end
        @testset "Multiply two negative rational numbers" begin
            @test mul([-1, 2], [-2, 3]) == [1, 3]
        end
        @testset "Multiply a rational number by its reciprocal" begin
            @test mul([1, 2], [2, 1]) == [1, 1]
        end
        @testset "Multiply a rational number by 1" begin
            @test mul([1, 2], [1, 1]) == [1, 2]
        end
        @testset "Multiply a rational number by 0" begin
            @test mul([1, 2], [0, 1]) == [0, 1]
        end
    end
    @testset "Division" begin
        @testset "Divide two positive rational numbers" begin
            @test div([1, 2], [2, 3]) == [3, 4]
        end
        @testset "Divide a positive rational number by a negative rational number" begin
            @test div([1, 2], [-2, 3]) == [-3, 4]
        end
        @testset "Divide two negative rational numbers" begin
            @test div([-1, 2], [-2, 3]) == [3, 4]
        end
        @testset "Divide a rational number by 1" begin
            @test div([1, 2], [1, 1]) == [1, 2]
        end
    end
end

@testset "Absolute value" begin
    @testset "Absolute value of a positive rational number" begin
        @test abs([1, 2]) == [1, 2]
    end
    @testset "Absolute value of a positive rational number with negative numerator and denominator" begin
        @test abs([-1, -2]) == [1, 2]
    end
    @testset "Absolute value of a negative rational number" begin
        @test abs([-1, 2]) == [1, 2]
    end
    @testset "Absolute value of a negative rational number with negative denominator" begin
        @test abs([1, -2]) == [1, 2]
    end
    @testset "Absolute value of zero" begin
        @test abs([0, 1]) == [0, 1]
    end
end

@testset "Exponentiation of a rational number" begin
    @testset "Raise a positive rational number to a positive integer power" begin
        @test exprational([1, 2], 3) == [1, 8]
    end
    @testset "Raise a negative rational number to a positive integer power" begin
        @test exprational([-1, 2], 3) == [-1, 8]
    end
    @testset "Raise zero to an integer power" begin
        @test exprational([0, 1], 5) == [0, 1]
    end
    @testset "Raise one to an integer power" begin
        @test exprational([1, 1], 4) == [1, 1]
    end
    @testset "Raise a positive rational number to the power of zero" begin
        @test exprational([1, 2], 0) == [1, 1]
    end
    @testset "Raise a negative rational number to the power of zero" begin
        @test exprational([-1, 2], 0) == [1, 1]
    end
end

@testset "Exponentiation of a real number to a rational number" begin
    @testset "Raise a real number to a positive rational number" begin
        @test expreal(8, [4, 3]) == 16.0
    end
    @testset "Raise a real number to a negative rational number" begin
        @test expreal(9, [-1, 2]) == 0.3333333333333333
    end
    @testset "Raise a real number to a zero rational number" begin
        @test expreal(2, [0, 1]) == 1.0
    end
end

@testset "Reduction to lowest terms" begin
    @testset "Reduce a positive rational number to lowest terms" begin
        @test reduce([2, 4]) == [1, 2]
    end
    @testset "Reduce a negative rational number to lowest terms" begin
        @test reduce([-4, 6]) == [-2, 3]
    end
    @testset "Reduce a rational number with a negative denominator to lowest terms" begin
        @test reduce([3, -9]) == [-1, 3]
    end
    @testset "Reduce zero to lowest terms" begin
        @test reduce([0, 6]) == [0, 1]
    end
    @testset "Reduce an integer to lowest terms" begin
        @test reduce([-14, 7]) == [-2, 1]
    end
    @testset "Reduce one to lowest terms" begin
        @test reduce([13, 13]) == [1, 1]
    end
end

