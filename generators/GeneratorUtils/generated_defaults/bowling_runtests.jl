# canonical data version: 1.2.0
# This file was generated by a script.

using Test

include("bowling.jl")

# The following lines are top-level comments in canonical-data.json; comments within cases
# are not included. Do not include these comments in the exercise's runtests.jl.
#
# Students should implement roll and score methods.
# Roll should accept a single integer.
# Score should return the game's final score, when possible
# For brevity the tests display all the previous rolls in an array;
# each element of the previousRolls array should be passed to the roll method
# and each of those previous rolls is expected to succeed.
# 
# Two properties are tested:
# 
# `score`: All rolls succeed, and taking the score gives the expected result.
# The expected result may be an integer score or an error.
# 
# `roll`: All previousRolls succeed, and rolling the number of pins in `roll` produces the expected result.
# Currently, all cases of this type result in errors.
# 
# In all error cases you should expect an error as is idiomatic for your language
# whether that be via exceptions, optional values, or otherwise.

@testset "should be able to score a game with all zeros" begin
    @test score([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) == 0
end

@testset "should be able to score a game with no strikes or spares" begin
    @test score([3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6]) == 90
end

@testset "a spare followed by zeros is worth ten points" begin
    @test score([6, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) == 10
end

@testset "points scored in the roll after a spare are counted twice" begin
    @test score([6, 4, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) == 16
end

@testset "consecutive spares each get a one roll bonus" begin
    @test score([5, 5, 3, 7, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) == 31
end

@testset "a spare in the last frame gets a one roll bonus that is counted once" begin
    @test score([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 3, 7]) == 17
end

@testset "a strike earns ten points in a frame with a single roll" begin
    @test score([10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) == 10
end

@testset "points scored in the two rolls after a strike are counted twice as a bonus" begin
    @test score([10, 5, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) == 26
end

@testset "consecutive strikes each get the two roll bonus" begin
    @test score([10, 10, 10, 5, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) == 81
end

@testset "a strike in the last frame gets a two roll bonus that is counted once" begin
    @test score([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 7, 1]) == 18
end

@testset "rolling a spare with the two roll bonus does not get a bonus roll" begin
    @test score([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 7, 3]) == 20
end

@testset "strikes with the two roll bonus do not get bonus rolls" begin
    @test score([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 10, 10]) == 30
end

@testset "a strike with the one roll bonus after a spare in the last frame does not get a bonus" begin
    @test score([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 3, 10]) == 20
end

@testset "all strikes is a perfect game" begin
    @test score([10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]) == 300
end

@testset "rolls cannot score negative points" begin
    @test_throws ArgumentError roll([], -1)
end

@testset "a roll cannot score more than 10 points" begin
    @test_throws ArgumentError roll([], 11)
end

@testset "two rolls in a frame cannot score more than 10 points" begin
    @test_throws ArgumentError roll([5], 6)
end

@testset "bonus roll after a strike in the last frame cannot score more than 10 points" begin
    @test_throws ArgumentError roll([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10], 11)
end

@testset "two bonus rolls after a strike in the last frame cannot score more than 10 points" begin
    @test_throws ArgumentError roll([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 5], 6)
end

@testset "two bonus rolls after a strike in the last frame can score more than 10 points if one is a strike" begin
    @test score([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 10, 6]) == 26
end

@testset "the second bonus rolls after a strike in the last frame cannot be a strike if the first one is not a strike" begin
    @test_throws ArgumentError roll([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 6], 10)
end

@testset "second bonus roll after a strike in the last frame cannot score more than 10 points" begin
    @test_throws ArgumentError roll([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 10], 11)
end

@testset "an unstarted game cannot be scored" begin
    @test_throws ArgumentError score([])
end

@testset "an incomplete game cannot be scored" begin
    @test_throws ArgumentError score([0, 0])
end

@testset "cannot roll if game already has ten frames" begin
    @test_throws ArgumentError roll([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 0)
end

@testset "bonus rolls for a strike in the last frame must be rolled before score can be calculated" begin
    @test_throws ArgumentError score([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10])
end

@testset "both bonus rolls for a strike in the last frame must be rolled before score can be calculated" begin
    @test_throws ArgumentError score([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 10])
end

@testset "bonus roll for a spare in the last frame must be rolled before score can be calculated" begin
    @test_throws ArgumentError score([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 3])
end

@testset "cannot roll after bonus roll for spare" begin
    @test_throws ArgumentError roll([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 3, 2], 2)
end

@testset "cannot roll after bonus rolls for strike" begin
    @test_throws ArgumentError roll([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 3, 2], 2)
end

