# canonical data version: 1.3.0
# This file was generated by a script.

using Test

include("custom-set.jl")

# The following lines are top-level comments in canonical-data.json; comments within cases
# are not included. Do not include these comments in the exercise's runtests.jl.
#
# These tests cover the core components of a set data structure: checking
# presence, adding, comparing and basic set operations. Other features
# such as deleting elements, checking size, sorting are not tested, but
# you can add them if they are interesting in your language
# 
# Tests about mixed-type sets are not included because the ability
# to implement that will vary by language. If your language supports it
# and you want to implement mixed-type sets, feel free.

@testset "Returns true if the set contains no elements" begin
    @testset "sets with no elements are empty" begin
        @test empty([]) == true
    end
    @testset "sets with elements are not empty" begin
        @test empty([1]) == false
    end
end

@testset "Sets can report if they contain an element" begin
    @testset "nothing is contained in an empty set" begin
        @test contains([], 1) == false
    end
    @testset "when the element is in the set" begin
        @test contains([1, 2, 3], 1) == true
    end
    @testset "when the element is not in the set" begin
        @test contains([1, 2, 3], 4) == false
    end
end

@testset "A set is a subset if all of its elements are contained in the other set" begin
    @testset "empty set is a subset of another empty set" begin
        @test subset([], []) == true
    end
    @testset "empty set is a subset of non-empty set" begin
        @test subset([], [1]) == true
    end
    @testset "non-empty set is not a subset of empty set" begin
        @test subset([1], []) == false
    end
    @testset "set is a subset of set with exact same elements" begin
        @test subset([1, 2, 3], [1, 2, 3]) == true
    end
    @testset "set is a subset of larger set with same elements" begin
        @test subset([1, 2, 3], [4, 1, 2, 3]) == true
    end
    @testset "set is not a subset of set that does not contain its elements" begin
        @test subset([1, 2, 3], [4, 1, 3]) == false
    end
end

@testset "Sets are disjoint if they share no elements" begin
    @testset "the empty set is disjoint with itself" begin
        @test disjoint([], []) == true
    end
    @testset "empty set is disjoint with non-empty set" begin
        @test disjoint([], [1]) == true
    end
    @testset "non-empty set is disjoint with empty set" begin
        @test disjoint([1], []) == true
    end
    @testset "sets are not disjoint if they share an element" begin
        @test disjoint([1, 2], [2, 3]) == false
    end
    @testset "sets are disjoint if they share no elements" begin
        @test disjoint([1, 2], [3, 4]) == true
    end
end

@testset "Sets with the same elements are equal" begin
    @testset "empty sets are equal" begin
        @test equal([], []) == true
    end
    @testset "empty set is not equal to non-empty set" begin
        @test equal([], [1, 2, 3]) == false
    end
    @testset "non-empty set is not equal to empty set" begin
        @test equal([1, 2, 3], []) == false
    end
    @testset "sets with the same elements are equal" begin
        @test equal([1, 2], [2, 1]) == true
    end
    @testset "sets with different elements are not equal" begin
        @test equal([1, 2, 3], [1, 2, 4]) == false
    end
    @testset "set is not equal to larger set with same elements" begin
        @test equal([1, 2, 3], [1, 2, 3, 4]) == false
    end
end

@testset "Unique elements can be added to a set" begin
    @testset "add to empty set" begin
        @test add([], 3) == [3]
    end
    @testset "add to non-empty set" begin
        @test add([1, 2, 4], 3) == [1, 2, 3, 4]
    end
    @testset "adding an existing element does not change the set" begin
        @test add([1, 2, 3], 3) == [1, 2, 3]
    end
end

@testset "Intersection returns a set of all shared elements" begin
    @testset "intersection of two empty sets is an empty set" begin
        @test intersection([], []) == []
    end
    @testset "intersection of an empty set and non-empty set is an empty set" begin
        @test intersection([], [3, 2, 5]) == []
    end
    @testset "intersection of a non-empty set and an empty set is an empty set" begin
        @test intersection([1, 2, 3, 4], []) == []
    end
    @testset "intersection of two sets with no shared elements is an empty set" begin
        @test intersection([1, 2, 3], [4, 5, 6]) == []
    end
    @testset "intersection of two sets with shared elements is a set of the shared elements" begin
        @test intersection([1, 2, 3, 4], [3, 2, 5]) == [2, 3]
    end
end

@testset "Difference (or Complement) of a set is a set of all elements that are only in the first set" begin
    @testset "difference of two empty sets is an empty set" begin
        @test difference([], []) == []
    end
    @testset "difference of empty set and non-empty set is an empty set" begin
        @test difference([], [3, 2, 5]) == []
    end
    @testset "difference of a non-empty set and an empty set is the non-empty set" begin
        @test difference([1, 2, 3, 4], []) == [1, 2, 3, 4]
    end
    @testset "difference of two non-empty sets is a set of elements that are only in the first set" begin
        @test difference([3, 2, 1], [2, 4]) == [1, 3]
    end
end

@testset "Union returns a set of all elements in either set" begin
    @testset "union of empty sets is an empty set" begin
        @test union([], []) == []
    end
    @testset "union of an empty set and non-empty set is the non-empty set" begin
        @test union([], [2]) == [2]
    end
    @testset "union of a non-empty set and empty set is the non-empty set" begin
        @test union([1, 3], []) == [1, 3]
    end
    @testset "union of non-empty sets contains all unique elements" begin
        @test union([1, 3], [2, 3]) == [3, 2, 1]
    end
end

