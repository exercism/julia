# canonical data version: 1.1.0
# This file was generated by a script.

using Test

include("proverb.jl")

# The following lines are top-level comments in canonical-data.json; comments within cases
# are not included. Do not include these comments in the exercise's runtests.jl.
#
# JSON doesn't allow for multi-line strings, so all expected outputs are presented 
# here as arrays of strings. It's up to the test generator to join the 
# lines together with line breaks. 

@testset "zero pieces" begin
    @test recite([]) == []
end

@testset "one piece" begin
    @test recite(["nail"]) == ["And all for the want of a nail."]
end

@testset "two pieces" begin
    @test recite(["nail", "shoe"]) == ["For want of a nail the shoe was lost.", "And all for the want of a nail."]
end

@testset "three pieces" begin
    @test recite(["nail", "shoe", "horse"]) == ["For want of a nail the shoe was lost.", "For want of a shoe the horse was lost.", "And all for the want of a nail."]
end

@testset "full proverb" begin
    @test recite(["nail", "shoe", "horse", "rider", "message", "battle", "kingdom"]) == ["For want of a nail the shoe was lost.", "For want of a shoe the horse was lost.", "For want of a horse the rider was lost.", "For want of a rider the message was lost.", "For want of a message the battle was lost.", "For want of a battle the kingdom was lost.", "And all for the want of a nail."]
end

@testset "four pieces modernized" begin
    @test recite(["pin", "gun", "soldier", "battle"]) == ["For want of a pin the gun was lost.", "For want of a gun the soldier was lost.", "For want of a soldier the battle was lost.", "And all for the want of a pin."]
end

