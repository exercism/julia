# canonical data version: 1.2.0
# This file was generated by a script.

using Test

include("palindrome-products.jl")

@testset "finds the smallest palindrome from single digit factors" begin
    @test smallest(1, 9) == Dict("value" => 1, "factors" => [[1, 1]])
end

@testset "finds the largest palindrome from single digit factors" begin
    @test largest(1, 9) == Dict("value" => 9, "factors" => [[1, 9], [3, 3]])
end

@testset "find the smallest palindrome from double digit factors" begin
    @test smallest(10, 99) == Dict("value" => 121, "factors" => [[11, 11]])
end

@testset "find the largest palindrome from double digit factors" begin
    @test largest(10, 99) == Dict("value" => 9009, "factors" => [[91, 99]])
end

@testset "find smallest palindrome from triple digit factors" begin
    @test smallest(100, 999) == Dict("value" => 10201, "factors" => [[101, 101]])
end

@testset "find the largest palindrome from triple digit factors" begin
    @test largest(100, 999) == Dict("value" => 906609, "factors" => [[913, 993]])
end

@testset "find smallest palindrome from four digit factors" begin
    @test smallest(1000, 9999) == Dict("value" => 1002001, "factors" => [[1001, 1001]])
end

@testset "find the largest palindrome from four digit factors" begin
    @test largest(1000, 9999) == Dict("value" => 99000099, "factors" => [[9901, 9999]])
end

@testset "empty result for smallest if no palindrome in the range" begin
    @test smallest(1002, 1003) == Dict("value" => nothing, "factors" => Any[])
end

@testset "empty result for largest if no palindrome in the range" begin
    @test largest(15, 15) == Dict("value" => nothing, "factors" => Any[])
end

@testset "error result for smallest if min is more than max" begin
    @test_throws ArgumentError smallest(10000, 1)
end

@testset "error result for largest if min is more than max" begin
    @test_throws ArgumentError largest(2, 1)
end

