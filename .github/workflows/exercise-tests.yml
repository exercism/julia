name: Exercise CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "exercises/**"
      - "runtests.jl"
      - ".github/workflows/exercise-tests.yml"
  pull_request:
    paths:
      - "exercises/**"
      - "runtests.jl"
      - ".github/workflows/exercise-tests.yml"

jobs:
  test:
    name: Julia ${{ matrix.julia-version }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        julia-version: ["1.6", "1", nightly]
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c

      - uses: julia-actions/setup-julia@f40c4b69330df1d22e7590c12e76dc2f9c66e0bc
        with:
          version: ${{ matrix.julia-version }}

      - uses: julia-actions/cache@6bbc93575c5ecf24ce645aa411bd09194de38019

      - name: Install test dependencies
        run: julia --color=yes --project -e "using Pkg; Pkg.instantiate()"

      - name: Test exercises
        run: julia --color=yes --project runtests.jl

  test-runner:
    name: Julia Test Runner
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c

      - name: Pull julia-test-runner image
        run: docker pull exercism/julia-test-runner

      - name: Install Julia dependencies
        run: julia --color=yes --project -e "using Pkg; Pkg.instantiate()"
      
      - name: Generate test reports using julia-test-runner
        id: generate-reports
        run: julia --color=yes --project runtestrunner.jl
      
      - name: Upload reports as artifact
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce
        with:
          name: test-reports
          path: ${{ steps.generate-reports.outputs.results-path }}

      - name: Check if all tests passed
        run: |
          using JSON

          any_errors = false

          for report in readdir(ENV["RESULTS"])
            result = JSON.parsefile(joinpath(ENV["RESULTS"], report))
            if result["status"] != "pass"
              global any_errors = true
              @error "Exercise failed tests" report
              run(`jq -C '.' $(joinpath(ENV["RESULTS"], report))`)
            end
          end

          any_errors && exit(1)
        env:
          RESULTS: ${{ steps.generate-reports.outputs.results-path }}
        shell: julia --color=yes --project {0}
